import fs from "fs";
import {
	InitArgs,
	init,
	generateArgs,
	prove,
	artifactUrls,
	packGroth16Proof,
	ArtifactsOrigin,
} from "@anon-aadhaar/core";
import * as ethers from "ethers";

const testQRData =
	

// safe op hash
const signal =
	"0x687f1fe30ca2db05608adc61300aa7073ba2492e9fa51d18844cdb99cffed07d";

const nullifierSeed = 1234;

async function generateProofs() {
	const certificate = fs
		.readFileSync(__dirname + "/testCertificate.pem")
		.toString();

	const anonAadhaarInitArgs: InitArgs = {
		wasmURL: artifactUrls.v2.wasm,
		zkeyURL: artifactUrls.v2.zkey,
		vkeyURL: artifactUrls.v2.vk,
		artifactsOrigin: ArtifactsOrigin.server,
	};

	await init(anonAadhaarInitArgs);

	const args = await generateArgs({
		qrData: testQRData,
		certificateFile: certificate,
		nullifierSeed: nullifierSeed,
		signal: signal, // user op hash
	});

	const anonAadhaarCore = await prove(args);
	const anonAadhaarProof = anonAadhaarCore.proof;
	const packedGroth16Proof = packGroth16Proof(anonAadhaarProof.groth16Proof);

	const encoder = ethers.AbiCoder.defaultAbiCoder();
	const proofData = encoder.encode(
		["uint", "uint", "uint[4]", "uint[8]"],
		[
			BigInt(nullifierSeed),
			Number(anonAadhaarCore?.proof.timestamp),
			[
				anonAadhaarProof.ageAbove18,
				anonAadhaarProof.gender,
				anonAadhaarProof.pincode,
				anonAadhaarProof.state,
			],
			packedGroth16Proof,
		]
	);

	console.log("anonAadhaarProof.nullifier: ", anonAadhaarProof.nullifier);
	console.log(`proofData: `, proofData);
}

generateProofs();
